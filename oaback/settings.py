"""
Django settings for oaback project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-re*zx#5+f#3lee6vvmec59i7jf^(_uy($q1(#(^$b3o^9f0)gu"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 安装rest_framework
    "rest_framework",
    # 解决跨域问题
    "corsheaders",
    # 项目的app
    "apps.oaauth",
    "apps.absent",
    "apps.inform",
    "apps.staff",
    "apps.image",
]

MIDDLEWARE = [
    # CorsMiddleware 需要放在第一位，不放在第一位，可能会造成某些请求没有添加CORS。一定要在commonmiddleware前面
    "corsheaders.middleware.CorsMiddleware" ,
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # 关闭CSRF保护，非模板渲染，使用vue做前端，并且用jwt验证，不存在csrf攻击
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "apps.oaauth.middlewares.LoginCheckMiddleware",
]

ROOT_URLCONF = "oaback.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "oaback.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "oaproject",
        "USER":"root",
        "PASSWORD":"123456",
        "PORT":"3306",
        "HOST":"127.0.0.1",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

# 默认汉字
LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "UTC"

USE_I18N = True

# 不用市区，默认本地时区
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# 配置静态文件路径
STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 允许所有域名跨域访问

CORS_ORIGIN_ALLOW_ALL = True

# 覆盖django自带的user模型
AUTH_USER_MODEL = "oaauth.OAUser"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':['apps.oaauth.authentications.UserTokenAuthentication'],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

MEDIA_ROOT = BASE_DIR/"media"
# http://127.0.0.1:8000/media/abc.png
MEDIA_URL = "/media/"

# 邮箱服务配置
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = '243763076@qq.com'
EMAIL_HOST_PASSWORD = 'neusrleojnqwbhaj'
EMAIL_USE_SSL=True
# EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL = '243763076@qq.com'

# 中间人的配置
CELERY_BROKER_URL = 'redis://127.0.0.1:6379/1'
# 指定结果的接受地址
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/2'
# 指定任务序列化方式（默认是json），可选择有：json、yaml、pickle、msgpack
CELERY_TASK_SERIALIZER = 'json'
# 指定结果序列化方式（默认是json）
CELERY_RESULT_SERIALIZER = 'json'
